version: '3.8'
networks:
  exporter:
    driver: bridge
services:
  db:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_DB=fintech
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes:
      - db:/var/lib/postgresql/data
    expose:
      - 5432
  db-origination:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_DB=fintech_origination
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5433:5432'
    volumes:
      - db-origination:/var/lib/postgresql/data
    expose:
      - 5433
  product-engine:
    build: ./product-engine
    ports:
      - '8083:8083'
  origination:
    build: ./origination
    ports:
      - '8084:8084'
      - '9094:9094'
  api:
    build: ./api
    ports:
      - '8085:8085'
  scoring:
    build: ./scoring
    ports:
      - '8086:8086'
  db-merchant-provider:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_DB=merchant_provider
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5434:5432'
    volumes:
      - db-merchant-provider:/var/lib/postgresql/data
    expose:
      - 5434
  merchant-provider:
    build: ./merchant-provider
    ports:
      - '8090:8090'
  db-payment-gate:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_DB=payment_gate
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5435:5432'
    volumes:
      - db-payment-gate:/var/lib/postgresql/data
    expose:
      - 5435
  payment-gate:
    depends_on:
      - db-payment-gate
    build: ./payment-gate
    ports:
      - '8091:8091'
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: echo srvr | nc zookeeper 2181 || exit 1
      start_period: 10s
      retries: 20
      interval: 10s
    networks:
      - exporter
  broker:
    image: confluentinc/cp-kafka:7.3.1
    hostname: broker
    container_name: broker
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - '29092:29092'
      - '9092:9092'
      - '9101:9101'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
    healthcheck:
      test: nc -z localhost 9092 || exit -1
      start_period: 15s
      interval: 5s
      timeout: 10s
      retries: 10
    networks:
      - exporter
  debezium:
    image: debezium/connect:latest
    restart: always
    container_name: debezium
    hostname: debezium
    depends_on:
      broker:
        condition: service_healthy
    ports:
      - '7083:8083'
    environment:
      BOOTSTRAP_SERVERS: broker:29092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      STATUS_STORAGE_TOPIC: connect_statuses
      OFFSET_STORAGE_TOPIC: connect_offsets
      KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      ENABLE_DEBEZIUM_SCRIPTING: 'true'
    healthcheck:
      test:
        [
          'CMD',
          'curl',
          '--silent',
          '--fail',
          '-X',
          'GET',
          'http://localhost:8083/connectors',
        ]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - exporter
volumes:
  db:
    driver: local
  db-origination:
    driver: local
  db-merchant-provider:
    driver: local
  db-payment-gate:
    driver: local
  db-transactional:
    driver: local
